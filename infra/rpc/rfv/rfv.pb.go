// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rfv.proto

package rfv

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type FindRequest struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *FindRequest) Reset()         { *m = FindRequest{} }
func (m *FindRequest) String() string { return proto.CompactTextString(m) }
func (*FindRequest) ProtoMessage()    {}
func (*FindRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a93b2c1ab53e9c0f, []int{0}
}

func (m *FindRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FindRequest.Unmarshal(m, b)
}
func (m *FindRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FindRequest.Marshal(b, m, deterministic)
}
func (m *FindRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FindRequest.Merge(m, src)
}
func (m *FindRequest) XXX_Size() int {
	return xxx_messageInfo_FindRequest.Size(m)
}
func (m *FindRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_FindRequest.DiscardUnknown(m)
}

var xxx_messageInfo_FindRequest proto.InternalMessageInfo

func (m *FindRequest) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

type RFCs struct {
	Rfcs                 []*RFC   `protobuf:"bytes,1,rep,name=rfcs,proto3" json:"rfcs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RFCs) Reset()         { *m = RFCs{} }
func (m *RFCs) String() string { return proto.CompactTextString(m) }
func (*RFCs) ProtoMessage()    {}
func (*RFCs) Descriptor() ([]byte, []int) {
	return fileDescriptor_a93b2c1ab53e9c0f, []int{1}
}

func (m *RFCs) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFCs.Unmarshal(m, b)
}
func (m *RFCs) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFCs.Marshal(b, m, deterministic)
}
func (m *RFCs) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFCs.Merge(m, src)
}
func (m *RFCs) XXX_Size() int {
	return xxx_messageInfo_RFCs.Size(m)
}
func (m *RFCs) XXX_DiscardUnknown() {
	xxx_messageInfo_RFCs.DiscardUnknown(m)
}

var xxx_messageInfo_RFCs proto.InternalMessageInfo

func (m *RFCs) GetRfcs() []*RFC {
	if m != nil {
		return m.Rfcs
	}
	return nil
}

type RFC struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Title                string   `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RFC) Reset()         { *m = RFC{} }
func (m *RFC) String() string { return proto.CompactTextString(m) }
func (*RFC) ProtoMessage()    {}
func (*RFC) Descriptor() ([]byte, []int) {
	return fileDescriptor_a93b2c1ab53e9c0f, []int{2}
}

func (m *RFC) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RFC.Unmarshal(m, b)
}
func (m *RFC) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RFC.Marshal(b, m, deterministic)
}
func (m *RFC) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RFC.Merge(m, src)
}
func (m *RFC) XXX_Size() int {
	return xxx_messageInfo_RFC.Size(m)
}
func (m *RFC) XXX_DiscardUnknown() {
	xxx_messageInfo_RFC.DiscardUnknown(m)
}

var xxx_messageInfo_RFC proto.InternalMessageInfo

func (m *RFC) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *RFC) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func init() {
	proto.RegisterType((*FindRequest)(nil), "rfv.FindRequest")
	proto.RegisterType((*RFCs)(nil), "rfv.RFCs")
	proto.RegisterType((*RFC)(nil), "rfv.RFC")
}

func init() { proto.RegisterFile("rfv.proto", fileDescriptor_a93b2c1ab53e9c0f) }

var fileDescriptor_a93b2c1ab53e9c0f = []byte{
	// 210 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0xce, 0x51, 0x4b, 0xc3, 0x30,
	0x14, 0x05, 0xe0, 0xa5, 0xe9, 0xd4, 0xde, 0x81, 0xc8, 0x45, 0xa4, 0x54, 0x85, 0x12, 0xf6, 0x50,
	0x14, 0x32, 0x98, 0x3f, 0xa1, 0x18, 0xdf, 0xf3, 0xea, 0xdb, 0x6c, 0x52, 0x02, 0xd5, 0xd4, 0x24,
	0x2d, 0xf8, 0xef, 0x25, 0x29, 0x15, 0xd9, 0x63, 0x0e, 0x39, 0xf7, 0x7c, 0x50, 0x38, 0x3d, 0xf3,
	0xd1, 0xd9, 0x60, 0x91, 0x3a, 0x3d, 0x57, 0xf7, 0xbd, 0xb5, 0xfd, 0xa0, 0x0e, 0x29, 0x3a, 0x4d,
	0xfa, 0xa0, 0x3e, 0xc7, 0xf0, 0xb3, 0xfc, 0x60, 0x8f, 0xb0, 0x13, 0xe6, 0xab, 0x93, 0xea, 0x7b,
	0x52, 0x3e, 0xe0, 0x35, 0x64, 0xa6, 0x2b, 0x49, 0x4d, 0x9a, 0xad, 0xcc, 0x4c, 0xc7, 0xf6, 0x90,
	0x4b, 0xd1, 0x7a, 0x7c, 0x80, 0xdc, 0xe9, 0x0f, 0x5f, 0x92, 0x9a, 0x36, 0xbb, 0xe3, 0x15, 0x8f,
	0x13, 0x52, 0xb4, 0x32, 0xa5, 0xec, 0x19, 0xa8, 0x14, 0xed, 0x79, 0x19, 0x6f, 0x61, 0x1b, 0x4c,
	0x18, 0x54, 0x99, 0xd5, 0xa4, 0x29, 0xe4, 0xf2, 0x38, 0xbe, 0xc3, 0x65, 0x6c, 0xaa, 0xd1, 0xe2,
	0x13, 0xd0, 0x37, 0x15, 0xf0, 0x8e, 0x2f, 0x42, 0xbe, 0x0a, 0xf9, 0x6b, 0x14, 0x56, 0xc5, 0x3a,
	0xe3, 0xd9, 0x06, 0xf7, 0x90, 0x47, 0x28, 0xde, 0xa4, 0xf0, 0x9f, 0xb9, 0xfa, 0xd3, 0xb0, 0xcd,
	0xe9, 0x22, 0x9d, 0x78, 0xf9, 0x0d, 0x00, 0x00, 0xff, 0xff, 0xb3, 0x91, 0xbf, 0x67, 0x04, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RFCRepoClient is the client API for RFCRepo service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RFCRepoClient interface {
	Get(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RFCs, error)
	Find(ctx context.Context, in *FindRequest, opts ...grpc.CallOption) (*RFC, error)
}

type rFCRepoClient struct {
	cc *grpc.ClientConn
}

func NewRFCRepoClient(cc *grpc.ClientConn) RFCRepoClient {
	return &rFCRepoClient{cc}
}

func (c *rFCRepoClient) Get(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*RFCs, error) {
	out := new(RFCs)
	err := c.cc.Invoke(ctx, "/rfv.RFCRepo/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *rFCRepoClient) Find(ctx context.Context, in *FindRequest, opts ...grpc.CallOption) (*RFC, error) {
	out := new(RFC)
	err := c.cc.Invoke(ctx, "/rfv.RFCRepo/Find", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RFCRepoServer is the server API for RFCRepo service.
type RFCRepoServer interface {
	Get(context.Context, *empty.Empty) (*RFCs, error)
	Find(context.Context, *FindRequest) (*RFC, error)
}

// UnimplementedRFCRepoServer can be embedded to have forward compatible implementations.
type UnimplementedRFCRepoServer struct {
}

func (*UnimplementedRFCRepoServer) Get(ctx context.Context, req *empty.Empty) (*RFCs, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedRFCRepoServer) Find(ctx context.Context, req *FindRequest) (*RFC, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Find not implemented")
}

func RegisterRFCRepoServer(s *grpc.Server, srv RFCRepoServer) {
	s.RegisterService(&_RFCRepo_serviceDesc, srv)
}

func _RFCRepo_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RFCRepoServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rfv.RFCRepo/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RFCRepoServer).Get(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _RFCRepo_Find_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RFCRepoServer).Find(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rfv.RFCRepo/Find",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RFCRepoServer).Find(ctx, req.(*FindRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RFCRepo_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rfv.RFCRepo",
	HandlerType: (*RFCRepoServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Get",
			Handler:    _RFCRepo_Get_Handler,
		},
		{
			MethodName: "Find",
			Handler:    _RFCRepo_Find_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rfv.proto",
}
